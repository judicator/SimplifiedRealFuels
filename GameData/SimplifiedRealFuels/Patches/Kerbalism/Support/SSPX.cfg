// Stock-alike Station Parts Expansion

// ============================================================================
// region Life Support
// ============================================================================
@PART[sspx-inflatable-cen*,sspx-expandable-cen*]:NEEDS[StationPartsExpansionRedux,ProfileSRFKerbalism]:FOR[KerbalismDefault]
{
	// Kerbalism forces the habitat to be inflated if kerbals are inside
	@CrewCapacity = #$MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$

	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = #SRF_KERBALISM_Scrubber_title
		capacity = #$../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = #KERBALISM_PressureControl_title//Pressure control
		capacity = #$../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
		@capacity *= 3
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = #KERBALISM_WaterRecycler_title//Water recycler
		capacity = #$../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
		running = true
		valve_i = 6 // workaround until we have a better way to deal with dump valves
	}

	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = #KERBALISM_WasteProcessor_title//Waste processor
		capacity = #$../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = #KERBALISM_H2O2FuelCell_title//H2+O2 fuel cell
		capacity = #$../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
		@capacity /= 4.8
		running = false
	}

	@MODULE[ProcessController],*
	{
		@capacity *= 1.67
	}

	MODULE
	{
		name = Configure
		title = Pod
		slots = 3

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = SRF_LongTermLifeSupport
				slots = 0
			}
		}

		SETUP
		{
			name = Pressure Control
			desc = #KERBALISM_PressureControl_desc//Use <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
			mass = 0.01
			cost = 100
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _PressureControl
			}
			RESOURCE
			{
				name = Nitrogen
				amount = #$../../../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
				maxAmount = #$../../../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
				@amount *= 500
				@maxAmount *= 500
			}
		}

		SETUP
		{
			name = Regen. CO2 Removal System
			desc = #KERBALISM_Scrubber_desc
			tech = SRF_LongTermLifeSupport
			mass = 0.09
			cost = 300
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Scrubber
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = #KERBALISM_WaterRecycler_desc//Filter impurities out of <b>WasteWater</b>.
			tech = SRF_LongTermLifeSupport
			mass = 0.05
			cost = 500
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}
			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = #$../../../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Waste Processor
			desc = #KERBALISM_WasteProcessor_desc//Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			mass = 0.05
			cost = 250
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteProcessor
			}
			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = #$../../../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = #KERBALISM_H2O2FuelCell_desc//Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.
			tech = largeElectrics
			mass = 0.1
			cost = 500
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
			RESOURCE
			{
				name = Hydrogen
				amount = 4506						// for 6 hours
				@amount *= #$../../../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
				maxAmount = 4506
				@maxAmount *= #$../../../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
			}
			RESOURCE
			{
				name = Oxygen
				amount = 2280						// for 6 hours
				@amount *= #$../../../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
				maxAmount = 2280
				@maxAmount *= #$../../../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
			}
		}

		SETUP
		{
			name = None
			desc = #KERBALISM_None_desc//Empty slot for mass and cost savings.
		}
	}
}

@PART[sspx-inflatable-hab*]:NEEDS[StationPartsExpansionRedux,ProfileSRFKerbalism]:FOR[KerbalismDefault]
{
	// Kerbalism forces the habitat to be inflated if kerbals are inside
	@CrewCapacity = #$MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$

	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = #SRF_KERBALISM_Scrubber_title
		capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = #KERBALISM_PressureControl_title//Pressure control
		capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
		@capacity *= 3
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = #KERBALISM_WaterRecycler_title//Water recycler
		capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
		running = true
		valve_i = 6 // workaround until we have a better way to deal with dump valves
	}

	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = #KERBALISM_WasteProcessor_title//Waste processor
		capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = #KERBALISM_H2O2FuelCell_title//H2+O2 fuel cell
		capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
		@capacity /= 4.8
		running = false
	}

	@MODULE[ProcessController],*
	{
		@capacity *= 1.67
	}

	MODULE
	{
		name = Configure
		title = Pod
		slots = 2

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = SRF_LongTermLifeSupport
				slots = 0
			}
		}

		SETUP
		{
			name = Pressure Control
			desc = #KERBALISM_PressureControl_desc//Use <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
			mass = 0.01
			cost = 100
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _PressureControl
			}
			RESOURCE
			{
				name = Nitrogen
				amount = #$../../../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
				maxAmount = #$../../../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
				@amount *= 500
				@maxAmount *= 500
			}
		}

		SETUP
		{
			name = Regen. CO2 Removal System
			desc = #KERBALISM_Scrubber_desc
			tech = SRF_LongTermLifeSupport
			mass = 0.09
			cost = 300
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Scrubber
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = #KERBALISM_WaterRecycler_desc//Filter impurities out of <b>WasteWater</b>.
			tech = SRF_LongTermLifeSupport
			mass = 0.05
			cost = 500
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}
			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = #$../../../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Waste Processor
			desc = #KERBALISM_WasteProcessor_desc//Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			mass = 0.05
			cost = 250
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteProcessor
			}
			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = #$../../../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = #KERBALISM_H2O2FuelCell_desc//Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.
			tech = largeElectrics
			mass = 0.1
			cost = 500
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
			RESOURCE
			{
				name = Hydrogen
				amount = 4506						// for 6 hours
				@amount *= #$../../../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
				maxAmount = 4506
				@maxAmount *= #$../../../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
			}
			RESOURCE
			{
				name = Oxygen
				amount = 2280						// for 6 hours
				@amount *= #$../../../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
				maxAmount = 2280
				@maxAmount *= #$../../../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
			}
		}

		SETUP
		{
			name = None
			desc = #KERBALISM_None_desc//Empty slot for mass and cost savings.
		}
	}
}
// end

// ============================================================================
// region Sickbay
// added by Gordon Dry
// ============================================================================

@PART[sspx-habitation-125-1]:NEEDS[StationPartsExpansionRedux,FeatureHabitat,FeatureRadiation]:AFTER[zzzzSimplifiedRealFuels]
{
	!MODULE[Sickbay] {}
}

// ============================================================================
// region Greenhouses
// ============================================================================
@PART[sspx-greenhouse-25-1]:NEEDS[StationPartsExpansionRedux,ProfileSRFKerbalism]:AFTER[KerbalismDefault]
{
	MODULE
	{
		name = Greenhouse
		crop_resource = Food								// name of resource produced by harvests
		// Twice as effective as kerbalism-greenhouse part. 
		// See https://forum.kerbalspaceprogram.com/index.php?/topic/172400-131145-kerbalism-v180/&page=32&tab=comments#comment-3446891 for details.

		// This greenhouse has 18 independent sections! It's 18 staged crops in rotation. Almost non-stop production, but each harvest is 18 times smaller.
		crop_size = 3.0625							// 18 times less harvest than 2x"kerbalism-greenhouse"
		crop_rate = 0.00000416664					 // but you can harvest 18 times more often due to independent sections!
		ec_rate = 5									 // 2x"kerbalism-greenhouse"
		light_tolerance = 400.0						 // minimum lighting flux required for growth, in W/m^2
		pressure_tolerance = 0.1					// minimum pressure required for growth, in sea level atmospheres
		radiation_tolerance = 0.000008333			 // maximum radiation allowed for growth in rad/s, considered after shielding is applied
		shutters = 25DoorsOpen						// animation to manipulate shutters
		animBackwards = True

		INPUT_RESOURCE
		{
			name = Ammonia
			rate = 0.00019140625							// 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = Water
			rate = 0.0000063802							 // 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = WasteAtmosphere						// Plants work on WasteAtmosphere and replace a scrubber, if not enough WasteAtmosphere exists then CO2 is used
			rate = 0.0024915995							 // 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = CarbonDioxide							// Kerbals don't provide enough WasteAtmosphere for their required food production. If excess WasteAtmosphere is
															// present then it will be used in place of CO2 injection
			rate = 0.00083053315							// 2x"kerbalism-greenhouse"
		}

		// Note. if there is a deficiency in the amount of WasteAtmosphere needed then the missing amount of WasteAtmosphere will be added to the
		// CarbonDioxide input and Vies Versa if not enough CarbonDioxide is present and there is extra WasteAtmosphere.
		// If there is not enough resources then the plants will suffer.

		OUTPUT_RESOURCE
		{
			name = Oxygen
			rate = 0.0034475965							 // 200% of oxygen required by 1 crew member
		}
	}

	RESOURCE
	{
		name = Ammonia
		amount = 544												// 2x"kerbalism-greenhouse"
		maxAmount = 544
	}

	RESOURCE
	{
		name = CarbonDioxide
		amount = 9000											 // 2x"kerbalism-greenhouse"
		maxAmount = 9000
	}

	// To support pressure control
	@MODULE[Configure]
	{
		@SETUP[Pressure?Control]
		{
			!RESOURCE[Nitrogen] {}
		}
	}

	RESOURCE
	{
		name = Nitrogen
		amount = 10000											// 1x"kerbalism-greenhouse" as it does not mess with crops
		maxAmount = 10000
	}

	RESOURCE
	{
		name = Water
		amount = 22												 // 2x"kerbalism-greenhouse"
		maxAmount = 22
	}

	!MODULE[ModuleAnimateGeneric] {}			// Greenhouse handles animation
}

@PART[sspx-greenhouse-375-1]:NEEDS[StationPartsExpansionRedux,ProfileSRFKerbalism]:AFTER[KerbalismDefault]
{
	MODULE
	{
		name = Greenhouse

		crop_resource = Food								// name of resource produced by harvests
		// Twice as effective as kerbalism-greenhouse part. 
		// See https://forum.kerbalspaceprogram.com/index.php?/topic/172400-131145-kerbalism-v180/&page=32&tab=comments#comment-3446891 for details.

		// Both growing "rings" of this greenhouse are unfortunately in the same section. No independent growing possible. (Different watering and lighting needs for different grow stages). 
		crop_size = 55.125									// 2x kerbalism-greenhouse
		crop_rate = 0.00000023148					 // regular growth speed
		ec_rate = 5												 // 2x"kerbalism-greenhouse"
		light_tolerance = 400.0						 // minimum lighting flux required for growth, in W/m^2
		pressure_tolerance = 0.1						// minimum pressure required for growth, in sea level atmospheres
		radiation_tolerance = 0.000008333	 // maximum radiation allowed for growth in rad/s, considered after shielding is applied

		INPUT_RESOURCE
		{
			name = Ammonia
			rate = 0.00019140625							// 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = Water
			rate = 0.0000063802							 // 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = WasteAtmosphere						// Plants work on WasteAtmosphere and replace a scrubber, if not enough WasteAtmosphere exists then CO2 is used
			rate = 0.0024915995							 // 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = CarbonDioxide							// Kerbals don't provide enough WasteAtmosphere for their required food production. If excess WasteAtmosphere is
																				// present then it will be used in place of CO2 injection
			rate = 0.00083053315							// 2x"kerbalism-greenhouse"
		}

		// Note. if there is a deficiency in the amount of WasteAtmosphere needed then the missing amount of WasteAtmosphere will be added to the
		// CarbonDioxide input and Vies Versa if not enough CarbonDioxide is present and there is extra WasteAtmosphere.
		// If there is not enough resources then the plants will suffer.

		OUTPUT_RESOURCE
		{
			name = Oxygen
			rate = 0.0034475965							 // 200% of oxygen required by 1 crew member
		}
	}

	//	Concider those nice IVA tanks and closets for increasing current resource capacity. I won't touch em for now.
	RESOURCE
	{
		name = Ammonia
		amount = 544												// 2x"kerbalism-greenhouse"
		maxAmount = 544
	}

	RESOURCE
	{
		name = CarbonDioxide
		amount = 9000											 // 2x"kerbalism-greenhouse"
		maxAmount = 9000
	}

	// To support pressure control
	@MODULE[Configure]
	{
		@SETUP[Pressure?Control]
		{
		!RESOURCE[Nitrogen] {}
		}
	}

	RESOURCE
	{
		name = Nitrogen
		amount = 10000											// 1x"kerbalism-greenhouse" as it does not mess with crops
		maxAmount = 10000
	}

	RESOURCE
	{
		name = Water
		amount = 22												 // 2x"kerbalism-greenhouse"
		maxAmount = 22
	}
}

// Passive radiation shielding for large (3.75m) habitats
@PART[sspx-habitation-375-1,sspx-habitation-375-2]:NEEDS[StationPartsExpansionRedux,ProfileSRFKerbalism,FeatureRadiation]:FOR[KerbalismDefault]
{
	MODULE
	{
		name = PassiveShield
		radiation = 0.00003	 // shielding power in rad/s
		toggle = false 		 // can be toggled
		require_eva = false	 // needs to be set up on EVA
		crew_operate = false // crew specs required to operate (see documentation)
	}
}
@PART[sspx-habitation-375-3]:NEEDS[StationPartsExpansionRedux,ProfileSRFKerbalism,FeatureRadiation]:FOR[KerbalismDefault]
{
	MODULE
	{
		name = PassiveShield
		radiation = 0.00009	 // shielding power in rad/s
		toggle = false 		 // can be toggled
		require_eva = false	 // needs to be set up on EVA
		crew_operate = false // crew specs required to operate (see documentation)
	}
}

// Remove crew experiments from PXL-3 'Asylum' Storm Cellar Module, add "CRAMPED" experiment instead
@PART[sspx-habitation-375-3]:NEEDS[StationPartsExpansionRedux,ProfileSRFKerbalism,FeatureScience]:AFTER[zzzzSimplifiedRealFuels]
{
	!MODULE[Experiment],* {}
	!MODULE[Configure]:HAS[#title[Crew?Experiments]] {}

	MODULE
	{
		name = Experiment
		experiment_id = kerbalism_SRF_Cramped
		experiment_desc = Study on Kerbal psychological changes whilst in cramped conditions of radiation shelter during solar storm.
		data_rate = 0.16389
		ec_rate = 0.5
		requires = CrewMin:8,RadiationMin:2
		crew_operate = True
		resources =
	}
}
