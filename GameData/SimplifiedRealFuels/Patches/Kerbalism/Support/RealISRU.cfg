Profile
{
	name = KerbalismSupport
	modname = RealISRU
	moddir = RealISRU

	Process
	{
		name = ammonia oxidization
		modifier = _AmmoniaOxidization
		input = ElectricCharge@0.2
		input = Ammonia@10.0
		input = Oxygen@8.96598411907198
		output = Water@0.0109814825506429
		output = NTO@0.0128934889724417
		dump_valve = Water,NTO
	}

	Process
	{
		name = Fisher-Tropsch process
		modifier = _FisherTropsch
		input = ElectricCharge@0.8
		input = Hydrogen@10.0
		input = CarbonMonoxide@9.59370985216787
		output = Kerosene@0.00667013128209099
		output = Water@0.00694171868542514
		dump_valve = Water,Kerosene
	}

	Process
	{
		name =  Methane pyrolysis
		modifier = _MethanePyrolysis
		input = ElectricCharge@0.2
		input = Methane@10.0
		output = Hydrogen@9.0
		output = Shielding@0.001502496
		dump_valve = Shielding,Hydrogen
	}

	Process
	{
		name =  Water gas shift
		modifier = _WaterGasShift
		input = ElectricCharge@0.15
		input = CarbonMonoxide@10.0
		input = Water@0.00803966440556944
		output = Hydrogen@4.50295043999461
		output = CarbonDioxide@9.06011088153879
		dump_valve = CarbonDioxide,Hydrogen
	}

	Process
	{
		name =  Reverse water gas shift
		modifier = _ReverseWaterGasShift
		input = ElectricCharge@0.15
		input = CarbonDioxide@10.0
		input = Hydrogen@4.9700831467416
		output = Water@0.00718769146830266
		output = CarbonMonoxide@8.94028793456033
		dump_valve = CarbonMonoxide,Water
	}

	Process
	{
		name =  Bosch reaction
		modifier = _BoschReaction
		input = ElectricCharge@0.08
		input = CarbonDioxide@10.0
		input = Hydrogen@9.9401662934832
		output = Water@0.0143753829366053
		output = Shielding@0.0000845
		dump_valve = Shielding,Water
	}

	Process
	{
		name = methanol production
		modifier = _MethanolProduction
		input = ElectricCharge@0.03
		input = CarbonDioxide@13.961092884
		input = Hydrogen@41.63480073
		output = Water@0.011149908
		output = Methanol@0.01254
		dump_valve = Water,Methanol
	}

	Process
	{
		name = oxygen liquefaction
		modifier = _OxLiquefaction
		input = ElectricCharge@0.1
		input = Oxygen@2.223680904
		output = LqdOxygen@0.002747931704
	}

	Process
	{
		name = lqd oxygen evaporator
		modifier = _LOxEvaporator
		input = ElectricCharge@0.01
		input = LqdOxygen@0.002747931704
		output = Oxygen@2.223680904
	}

	Process
	{
		name = methane liquefaction
		modifier = _MeLiquefaction
		input = ElectricCharge@0.1
		input = Methane@11.42768059
		output = LqdMethane@0.01925153775
	}

	Process
	{
		name = lqd methane evaporator
		modifier = _LMeEvaporator
		input = ElectricCharge@0.01
		input = LqdMethane@0.01925153775
		output = Methane@11.42768059
	}

	Process
	{
		name = ammonia liquefaction
		modifier = _AmLiquefaction
		input = ElectricCharge@0.1
		input = Ammonia@17.41539143
		output = LqdAmmonia@0.019074827
	}

	Process
	{
		name = lqd ammonia evaporator
		modifier = _LAmEvaporator
		input = ElectricCharge@0.01
		input = LqdAmmonia@0.019074827
		output = Ammonia@17.41539143
	}
}

// Liquefaction Array
@PART[RealISRU_LiquefactionArray,RealISRU_LiquefactionArray_small]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@title ^= :$: * SRF ISRU *:

	!MODULE[ModuleResourceConverter],* {}
	!MODULE[ModuleCoreHeat] {}
	!MODULE[ModuleOverheatDisplay] {}

	MODULE:NEEDS[CryoTanks]
	{
		name = ProcessController
		resource = _HyLiquefaction
		title = Hydrogen liquefaction
		capacity = 2.5
	}
	MODULE:NEEDS[CryoTanks]
	{
		name = ProcessController
		resource = _LHyEvaporator
		title = LH2 evaporator
		capacity = 2.5
	}
	MODULE
	{
		name = ProcessController
		resource = _OxLiquefaction
		title = Oxygen liquefaction
		capacity = 2.5
	}
	MODULE
	{
		name = ProcessController
		resource = _LOxEvaporator
		title = LOX evaporator
		capacity = 2.5
	}
	MODULE
	{
		name = ProcessController
		resource = _OxLiquefaction
		title = Methane liquefaction
		capacity = 2.5
	}
	MODULE
	{
		name = ProcessController
		resource = _LOxEvaporator
		title = Lqd.Methane evaporator
		capacity = 2.5
	}
	MODULE
	{
		name = ProcessController
		resource = _OxLiquefaction
		title = Ammonia liquefaction
		capacity = 2.5
	}
	MODULE
	{
		name = ProcessController
		resource = _LOxEvaporator
		title = Lqd.Ammonia evaporator
		capacity = 2.5
	}

	MODULE
	{
		name = Configure
		title = Liquefaction Array
		slots = 2

		SETUP:NEEDS[CryoTanks]
		{
			name = Hydrogen Liquefaction
			desc = Liquefy <b>Hydrogen</b> gas into <b>Lqd.Hydrogen</b>.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _HyLiquefaction
			}
		}
		SETUP:NEEDS[CryoTanks]
		{
			name = LH2 Evaporator
			desc = Evaporate <b>Liquid Hydrogen</b> into <b>Hydrogen</b> gas.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _LHyEvaporator
			}
		}

		SETUP
		{
			name = Oxygen Liquefaction
			desc = Liquefy <b>Oxygen</b> gas into <b>Lqd.Oxygen</b>.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _OxLiquefaction
			}
		}
		SETUP
		{
			name = LOX Evaporator
			desc = Evaporate <b>Lqd.Oxygen</b> into <b>Oxygen</b> gas.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _LOxEvaporator
			}
		}

		SETUP
		{
			name = Methane Liquefaction
			desc = Liquefy <b>Methane</b> gas into <b>Lqd.Methane</b>.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MeLiquefaction
			}
		}
		SETUP
		{
			name = Lqd.Methane Evaporator
			desc = Evaporate <b>Lqd.Methane</b> into <b>Methane</b> gas.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _LMeEvaporator
			}
		}

		SETUP
		{
			name = Ammonia Liquefaction
			desc = Liquefy <b>Ammonia</b> gas into <b>Lqd.Ammonia</b>.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _AmLiquefaction
			}
		}
		SETUP
		{
			name = Lqd.Ammonia Evaporator
			desc = Evaporate <b>Lqd.Ammonia</b> into <b>Ammonia</b> gas.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _LAmEvaporator
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Liquefaction array
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.2
	}
}
@PART[RealISRU_LiquefactionArray]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@MODULE[ProcessController],*
	{
		@capacity *= 8
	}
}

// Atmospheric ISRU Intakes
@PART[RealISRU_AtmosphericIntakeSmall,RealISRU_AtmosphericIntake2m,RealISRU_Hex_PSA]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	!MODULE[ModuleResourceHarvester],* {}

	MODULE
	{
		name = Harvester
		title = Oxygen Filter
		type = 2
		resource = Oxygen
		min_abundance = 0.02
		min_pressure = 5.0
		rate = 0.25
		ec_rate = 0.5
	}

	MODULE
	{
		name = Harvester
		title = Nitrogen Filter
		type = 2
		resource = Nitrogen
		min_abundance = 0.01
		min_pressure = 2.0
		rate = 0.35
		ec_rate = 0.5
	}

	MODULE
	{
		name = Harvester
		title = CO2 Filter
		type = 2
		resource = CarbonDioxide
		min_abundance = 0.0025
		min_pressure = 4.0
		rate = 0.2
		ec_rate = 0.5
	}

	MODULE
	{
		name = Harvester
		title = Ammonia Filter
		type = 2
		resource = Ammonia
		min_abundance = 0.01
		min_pressure = 2.0
		rate = 0.35
		ec_rate = 0.5
	}

	MODULE
	{
		name = Harvester
		title = Hydrogen Filter
		type = 2
		resource = Hydrogen
		min_abundance = 0.01
		min_pressure = 2.0
		rate = 0.35
		ec_rate = 0.5
	}

	MODULE
	{
		name = Harvester
		title = Argon Filter
		type = 2
		resource = ArgonGas
		min_abundance = 0.01
		min_pressure = 2.0
		rate = 0.01
		ec_rate = 2
	}

	MODULE
	{
		name = Harvester
		title = CO Filter
		type = 2
		resource = CarbonMonoxide
		min_abundance = 0.0025
		min_pressure = 4.0
		rate = 0.2
		ec_rate = 0.5
	}

	MODULE
	{
		name = Configure
		title = Atmospheric Filter
		slots = 1

		SETUP
		{
			name = Oxygen Filter
			desc = Extract <b>Oxygen</b> from the atmosphere.

			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Oxygen
			}
		}

		SETUP
		{
			name = Nitrogen Filter
			desc = Extract <b>Nitrogen</b> from the atmosphere.

			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Nitrogen
			}
		}

		SETUP
		{
			name = CO2 Filter
			desc = Extract <b>CO2</b> from the atmosphere.

			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = CarbonDioxide
			}
		}

		SETUP
		{
			name = Ammonia Filter
			desc = Extract <b>Ammonia</b> from the atmosphere.

			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Ammonia
			}
		}

		SETUP
		{
			name = Hydrogen Filter
			desc = Extract <b>Hydrogen</b> from the atmosphere.

			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Hydrogen
			}
		}

		SETUP
		{
			name = Argon Filter
			desc = Extract <b>Argon</b> from the atmosphere.

			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = ArgonGas
			}
		}

		SETUP
		{
			name = CO Filter
			desc = Extract <b>CO</b> from the atmosphere.

			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = CarbonMonoxide
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = Harvester
		title = Harvester
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.5
	}
}
@PART[RealISRU_Hex_PSA]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@MODULE[Configure]
	{
		@slots = 2
	}
	@MODULE[Harvester],*
	{
		@rate *= 1.5
		@ec_rate *= 1.5
	}
}
@PART[RealISRU_AtmosphericIntake2m]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@MODULE[Harvester],*
	{
		@rate *= 2
		@ec_rate *= 2
	}
}

// Haber-Bosch
@PART[RealISRU_HaberBoschProcess]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@title ^= :$: * SRF ISRU *:

	!MODULE[ModuleResourceConverter] {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _Haber
		title = Haber-Bosch process
		desc = Produce <b>Ammonia</b> by <b>Nitrogen</b> fixation.
		capacity = 60
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Haber-Bosch processor
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.2
	}
}

// Ammonia oxidization
@PART[RealISRU_AmmoniaOxidizer]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@title ^= :$: * SRF ISRU *:

	!MODULE[ModuleResourceConverter] {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _AmmoniaOxidization
		title = Ammonia oxidization process
		desc = Produce <b>Water</b> and <b>NTO</b> by oxidizing <b>Ammonia</b>.
		capacity = 60
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Ammonia oxidizer processor
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.2
	}
}

// Fischer-Tropsch
@PART[RealISRU_FischerTropschReaction]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@title ^= :$: * SRF ISRU *:

	!MODULE[ModuleResourceConverter] {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _FisherTropsch
		title = Fisher-Tropsch process
		desc = Produce <b>Water</b> and <b>Kerosene</b> from <b>Hydrogen</b> and <b>CO</b>.
		capacity = 60
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Fisher-Tropsch processor
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.2
	}
}

// Water electrolysis
@PART[RealISRU_Hex_Elektron,RealISRU_WaterElectrolyzer]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@title ^= :$: * SRF ISRU *:

	!MODULE[ModuleResourceConverter] {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _WaterElectrolysis
		title = Water electrolysis process
		desc = Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components.
		capacity = 3
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Water electrolyser
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.2
	}
}

// Fuel cell
@PART[RealISRU_Hex_FuelCell]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@title ^= :$: * SRF Fuel Cell *:

	!MODULE[ModuleResourceConverter] {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = H2+O2 fuel cell
		desc = Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.
		capacity = 100
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.5
	}
}

// Haber-Bosch plus LH2 evaporator
@PART[RealISRU_Hex_HaberBosch]:NEEDS[RealISRU,CryoTanks,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@title ^= :$: * SRF ISRU *:

	!MODULE[ModuleResourceConverter],* {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _Haber
		title = Haber-Bosch process
		desc = Produce <b>Ammonia</b> by <b>Nitrogen</b> fixation.
		capacity = 3
	}

	MODULE
	{
		name = ProcessController
		resource = _LHyEvaporator
		title = LH2 evaporator
		desc = Evaporate <b>Liquid Hydrogen</b> into <b>Hydrogen</b> gas.
		capacity = 10
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Haber-Bosch processor
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.2
	}
}

// Sabatier reactor plus LH2 evaporator
@PART[RealISRU_Hex_Sabatier,RealISRU_SabatierReactor]:NEEDS[RealISRU,CryoTanks,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@title ^= :$: * SRF ISRU *:

	!MODULE[ModuleResourceConverter],* {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _Sabatier
		title = Sabatier process
		desc = <b>Hydrogen</b> and <b>CarbonDioxide</b> react with a copper and zinc oxides catalyst to produce <b>Water</b> and <b>Methane</b>.
		capacity = 3
	}

	MODULE
	{
		name = ProcessController
		resource = _MethanolProduction
		title = Methanol production
		desc = <b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>Methanol</b>.
		capacity = 3
	}

	MODULE
	{
		name = ProcessController
		resource = _LHyEvaporator
		title = LH2 evaporator
		desc = Evaporate <b>Liquid Hydrogen</b> into <b>Hydrogen</b> gas.
		capacity = 10
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Sabatier processor
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.2
	}
}
@PART[RealISRU_SabatierReactor]:NEEDS[RealISRU,CryoTanks,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@MODULE[ProcessController],*
	{
		@capacity *= 3
	}
}

// Solid oxide electrolyzer
@PART[RealISRU_SolidOxideElectrolyzer]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@title ^= :$: * SRF ISRU *:

	!MODULE[ModuleResourceConverter],* {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _SOE
		title = Solid Oxide Electrolysis
		desc = Transform <b>CarbonDioxide</b> into <b>Oxygen</b> and <b>Shielding</b>.
		capacity = 3
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Solid oxide electrolyzer
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.2
	}
}

// Methane pyrolysis unit
@PART[RealISRU_MethanePyrolyzer]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@title ^= :$: * SRF ISRU *:

	!MODULE[ModuleResourceConverter],* {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _MethanePyrolysis
		title = Methane Pyrolysis
		desc = Transform <b>Methane</b> into <b>Hydrogen</b> and <b>Shielding</b>.
		capacity = 3
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Methane pyrolysis unit
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.2
	}

	!RESOURCE[Carbon] {}
}

// Water gas shift processor
@PART[RealISRU_WaterGasShift]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@title ^= :$: * SRF ISRU *:

	!MODULE[ModuleResourceConverter],* {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _WaterGasShift
		title = Water gas shift
		desc = Transform <b>Water</b> and <b>CO</b> to <b>Hydrogen</b> and <b>CO2</b>.
		capacity = 10
	}

	MODULE
	{
		name = ProcessController
		resource = _ReverseWaterGasShift
		title = Reverse water gas shift
		desc = Transform <b>Hydrogen</b> and <b>CO2</b> to <b>Water</b> and <b>CO</b>.
		capacity = 10
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Water gas shift processor
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.2
	}
}

// Bosch reactor
@PART[RealISRU_BoschReaction]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	@title ^= :$: * SRF ISRU *:

	!MODULE[ModuleResourceConverter],* {}
	!MODULE[ModuleCoreHeat] {}

	MODULE
	{
		name = ProcessController
		resource = _BoschReaction
		title = Bosch reaction
		desc = Transform <b>Hydrogen</b> and <b>CO2</b> to <b>Water</b> and <b>Shielding</b>.
		capacity = 10
	}

	MODULE
	{
		name = ProcessController
		resource = _LHyEvaporator
		title = LH2 evaporator
		desc = Evaporate <b>Liquid Hydrogen</b> into <b>Hydrogen</b> gas.
		capacity = 10
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Water gas shift processor
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.2
	}

	!RESOURCE[Carbon] {}
}

// Ice drill
@PART[RealISRU_IceDrill]:NEEDS[RealISRU,ProfileSRFKerbalism]:AFTER[RealISRU]
{
	!MODULE[ModuleResourceHarvester],* {}
	!MODULE[ModuleResourceConverter],* {}
	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[ModuleCoreHeat] {}
	!MODULE[ProcessController],* {}

	MODULE
	{
		name = Harvester
		title = Water Excavation
		drill = ImpactTransform
		length = 5
		type = 0
		resource = Water
		min_abundance = 0.01
		// https://www.nasa.gov/sites/default/files/atoms/files/mars_ice_drilling_assessment_v6_for_public_release.pdf shows
		// water harvesters from Ice at a rate of 50-400 L/day, as a middle ground we choose 65 L/day for the small harvester
		// which when scaled by factor 5 for the big harvester becomes 325 L/day.
		rate = 0.025 // 65 L/day / (6 hours/day * 3600 seconds/hour)
		// This is the maximum abundance on a random planet/moon
		// And the average on Duna poles, which are the only place where at the time writing higher than baseline water levels are modeled
		// And lower than what is found on Kerbin and Laythe
		abundance_rate = 0.1
		ec_rate = 5.0
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = Harvester
		title = Harvester
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.2
	}

	!RESOURCE[Hydrates] {}
	@RESOURCE[Water]
	{
		@maxAmount = 10
	}
}


// =======================================================
// Pseudo-resources used by Kerbalism support for RealISRU
// =======================================================
RESOURCE_DEFINITION:NEEDS[RealISRU,ProfileSRFKerbalism]
{
	name = _AmmoniaOxidization
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION:NEEDS[RealISRU,ProfileSRFKerbalism]
{
	name = _FisherTropsch
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION:NEEDS[RealISRU,ProfileSRFKerbalism]
{
	name = _MethanePyrolysis
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION:NEEDS[RealISRU,ProfileSRFKerbalism]
{
	name = _WaterGasShift
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION:NEEDS[RealISRU,ProfileSRFKerbalism]
{
	name = _ReverseWaterGasShift
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION:NEEDS[RealISRU,ProfileSRFKerbalism]
{
	name = _BoschReaction
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION:NEEDS[RealISRU,ProfileSRFKerbalism]
{
	name = _MethanolProduction
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION:NEEDS[RealISRU,ProfileSRFKerbalism]
{
	name = _OxLiquefaction
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION:NEEDS[RealISRU,ProfileSRFKerbalism]
{
	name = _LOxEvaporator
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION:NEEDS[RealISRU,ProfileSRFKerbalism]
{
	name = _MeLiquefaction
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION:NEEDS[RealISRU,ProfileSRFKerbalism]
{
	name = _LMeEvaporator
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION:NEEDS[RealISRU,ProfileSRFKerbalism]
{
	name = _AmLiquefaction
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION:NEEDS[RealISRU,ProfileSRFKerbalism]
{
	name = _LAmEvaporator
	density = 0.0
	isVisible = false
}
