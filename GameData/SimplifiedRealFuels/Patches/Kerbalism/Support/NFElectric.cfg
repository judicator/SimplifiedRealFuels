@PART[rtg-0625]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[zzzzSimplifiedRealFuels]
{
	@cost = 22400

	@MODULE[Emitter]:NEEDS[FeatureRadiation]
	{
		@radiation = 0.0000277775 // 0.1 rad/h
	}

	MODULE
	{
		name = ProcessController
		resource = _RTGPo210
		title = #SRF_KERBALISM_Po210RTG_title
		capacity = 3
		running = true
		toggle = false
	}

	MODULE
	{
		name = ProcessController
		resource = _RTGSr90
		title = #SRF_KERBALISM_Sr90RTG_title
		capacity = 3
		running = true
		toggle = false
	}

	MODULE
	{
		name = ProcessController
		resource = _RTGAm241
		title = #SRF_KERBALISM_Am241RTG_title
		capacity = 3
		running = true
		toggle = false
	}

	MODULE
	{
		name = ProcessController
		resource = _RTG
		title = #SRF_KERBALISM_Pu238RTG_title
		capacity = 3
		running = true
		toggle = false
	}

	MODULE
	{
		name = Configure
		title = RTG
		slots = 1

		SETUP
		{
			name = Pu-238 RTG
			desc = #SRF_KERBALISM_Pu238RTG_desc
			tech = SRF_AdvRTG
			cost = 123200
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _RTG
			}
		}

		SETUP
		{
			name = Am-241 RTG
			desc = #SRF_KERBALISM_Am241RTG_desc
			tech = SRF_AdvRTG
			cost = 44800
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _RTGAm241
			}
		}

		SETUP
		{
			name = Sr-90 RTG
			desc = #SRF_KERBALISM_Sr90RTG_desc
			tech = SRF_ImprovedRTG
			cost = 12800
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _RTGSr90
			}
			MODULE:NEEDS[FeatureRadiation]
			{
				type = Emitter
				id_index = 0
			}
		}

		SETUP
		{
			name = Po-210 RTG
			desc = #SRF_KERBALISM_Po210RTG_desc
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _RTGPo210
			}
		}
	}
}


// ============================================================================
// Add Nuclear reactor process's to all NearFutureElectrical Nuclear reactors
// ============================================================================
	// Radiation workers are allowed to be exposed to 5000 mrem of radiation on yearly basis, but recommended to stay within 1000 mrem/year over whole lifetime
	// Radiation workers are likely to receive 100 mrem/year, so let's use that value for a single reactor
	// See http://news.mit.edu/1994/safe-0105 and http://neinuclearnotes.blogspot.com/2008/08/nuclear-plant-workers-averaged-lowest.html
	// Note: 1000 mrem is 1 rad
	// Note: Assume that shielding improves for larger reactors, and thus radiation is constant for all reactor types

@PART[reactor-*]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[NearFutureElectrical]
{
//	!MODULE[FissionGenerator],* {}
//	!MODULE[FissionReactor],* {}
//	!MODULE[ModuleCoreHeatNoCatchup],* {}
//	!MODULE[ModuleUpdateOverride],* {}

	MODULE:NEEDS[FeatureRadiation]
	{
		name = Emitter
		radiation = 0.0003 // rad/s
	}

	MODULE
	{
		name = ProcessController
		resource = _Nukereactor
		title = Fission reactor
		capacity = 1
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = FissionGenerator
		title = Fission Generator
		redundancy = Power Generation
		repair = Engineer
		mtbf = 36288000
		extra_cost = 0.5
		extra_mass = 0.25
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Fission Reactor
		redundancy = Power Generation
		repair = Engineer
		mtbf = 36288000
		extra_cost = 0.5
		extra_mass = 0.25
	}
}

@PART[reactor-0625]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[NearFutureElectrical]
{
	@MODULE[ProcessController]:HAS[#title[Fission?reactor]]
	{
		@capacity *= 1.2
	}
}

@PART[reactor-125]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[NearFutureElectrical]
{
	@MODULE[ProcessController]:HAS[#title[Fission?reactor]]
	{
		@capacity *= 8.0
	}
}

@PART[reactor-25]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[NearFutureElectrical]
{
	@MODULE[ProcessController]:HAS[#title[Fission?reactor]]
	{
		@capacity *= 40.0
	}
}

@PART[reactor-25-2]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[NearFutureElectrical]
{
	@MODULE[ProcessController]:HAS[#title[Fission?reactor]]
	{
		@capacity *= 60.0
	}
}

@PART[reactor-375]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[NearFutureElectrical]
{
	@MODULE[ProcessController]:HAS[#title[Fission?reactor]]
	{
		@capacity *= 40.0
	}
}

@PART[reactor-375-2]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[NearFutureElectrical]
{
	@MODULE[ProcessController]:HAS[#title[Fission?reactor]]
	{
		@capacity *= 120.0
	}
}

@PART[nuclear-recycler-25]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[NearFutureElectrical]
{
	!MODULE[ModuleResourceConverter],* {}
	!MODULE[ModuleOverheatDisplay],* {}
	!MODULE[ModuleCoreHeat],* {}

	MODULE:NEEDS[FeatureRadiation]
	{
		name = Emitter
		radiation = 0.0003 // rad/s
	}

	MODULE
	{
		name = ProcessController
		resource = _Centrifuge
		title = Uraninite centrifuge
		capacity = 1
	}

	MODULE
	{
		name = ProcessController
		resource = _Breeder
		title = Breeder reactor
		capacity = 1
	}

	MODULE
	{
		name = Configure
		title = Nuclear Processor
		slots = 2

		SETUP
		{
			name = Uraninite Centrifuge
			desc = Extract <b>EnrichedUranium</b> out of <b>Uraninite</b>.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Centrifuge
			}
		}

		SETUP
		{
			name = Breeder Reactor
			desc = Extract <b>EnrichedUranium</b> out of <b>DepletedFuel</b>.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Breeder
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Nuclear Processor
		redundancy = Power Generation
		repair = Engineer
		mtbf = 36288000
		extra_cost = 2.5
		extra_mass = 1.0
	}
}

@PART[nuclear-recycler-25]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[NearFutureElectrical]
{
	// Better efficiency than using a generic ISRU Chemical Plant for processing
	@MODULE[ProcessController]:HAS[#title[Uraninite*]]
	{
		@capacity = 110
	}
	@MODULE[ProcessController]:HAS[#title[Breeder*]]
	{
		@capacity = 110
	}
}

// ============================================================================
// Add Uraninite drilling to ISRU drills
// ============================================================================
@PART[MiniDrill,RadialDrill]:HAS[@MODULE[Harvester]:HAS[~title[Uraninite?Extraction]]]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[NearFutureElectrical]
{
	MODULE
	{
		name = Harvester
		title = Uraninite Extraction
		drill = ImpactTransform
		type = 0
		resource = Uraninite
		min_abundance = 0.05
		rate = 0.0002746
		ec_rate = 1.0
	}

	@MODULE[Configure]
	{
		SETUP
		{
			name = Uraninite Extraction
			desc = Extract <b>Uraninite</b> from the surface.

			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Uraninite
			}

			RESOURCE
			{
				name = Uraninite
				amount = 0
				maxAmount = 50
			}
		}
	}
}
@PART[RadialDrill]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[NearFutureElectrical]
{
	@MODULE[Harvester]:HAS[#title[Uraninite*]]
	{
		@rate = 0.001373
		@ec_rate = 5.0
	}
}

@PART[MiniDrill]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[NearFutureElectrical]
{
	@MODULE[ModuleAsteroidDrill]
	{
		@PowerConsumption = 1.27
	}
}

// ============================================================================
// Pseudo-resources used by Kerbalism support for NearFutureElectrical
// ============================================================================
RESOURCE_DEFINITION:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]
{
	name = _Centrifuge
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]
{
	name = _Breeder
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]
{
	name = _Nukereactor
	density = 0.0
	isVisible = false
}

@RESOURCE_DEFINITION[DepletedFuel]:NEEDS[NearFutureElectrical,ProfileSRFKerbalism]:AFTER[NearFutureElectrical]
{
	@isTweakable = true
}
