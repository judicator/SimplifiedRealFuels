// Containers for bulk or solid materials, like Food, RocketParts, ores, etc.

// Default mass offset = -mass
@PART[*]:HAS[#SRFTankType[Container],#totalCap[>0],~massOffset[],~SRFTankAlreadyConfigured[]]:FOR[zzzzSimplifiedRealFuels]
{
	%massOffset = #$mass$
	@massOffset *= -1
}
// Default cost offset = -cost
@PART[*]:HAS[#SRFTankType[Container],#totalCap[>0],~costOffset[],~SRFTankAlreadyConfigured[]]:FOR[zzzzSimplifiedRealFuels]
{
	%costOffset = #$cost$
	@costOffset *= -1
}

// Fuel tank types switcher

@PART[*]:HAS[#SRFTankType[Container],#totalCap[>0],#massOffset[*],#costOffset[*],~SRFTankAlreadyConfigured[]]:NEEDS[CommunityResourcePack,B9PartSwitch]:FOR[zzzzSimplifiedRealFuels]
{
	%SRFTankAlreadyConfigured = True
	@title ^= :$: * SRF Container *:

	// Mass and cost of part are determined by tank type and volume
	@mass += #$massOffset$
	@cost += #$costOffset$
	// but they should not be negative
	@mass ^= :^-.*$:0: // If negative, set to zero
	@cost ^= :^-.*$:0: // If negative, set to zero

	!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[fuelSwitch]] {}

	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = fuelSwitch
		switcherDescription = #LOC_SRF_TankType_DisplayName
		baseVolume = #$../totalCap$
		affectDragCubes = false

		SUBTYPE
		{
			name = Regolith
			title = #LOC_CRP_Regolith_DisplayName
			tankType = SRF_Regolith
		}
		SUBTYPE
		{
			name = Aluminium
			title = #LOC_CRP_Aluminium_DisplayName
			tankType = SRF_Aluminium
		}
		SUBTYPE
		{
			name = RocketParts
			title = #LOC_CRP_RocketParts_DisplayName
			tankType = SRF_RocketParts
		}
		SUBTYPE
		{
			name = Polymers
			title = #LOC_CRP_Polymers_DisplayName
			tankType = SRF_Polymers
		}
		SUBTYPE
		{
			name = Chemicals
			title = #LOC_CRP_Chemicals_DisplayName
			tankType = SRF_Chemicals
		}
		SUBTYPE
		{
			name = Food
			title = #LOC_CRP_Food_DisplayName
			tankType = SRF_Food
		}
	}
}
