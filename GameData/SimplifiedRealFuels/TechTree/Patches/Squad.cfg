// *******
// Engines
// *******

// Early KeroLOX Engines
@PART[radialEngineMini_v2,liquidEngine,liquidEngine2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advRocketry
	%SRFTechTreeAllocated = True
}

// Advanced KeroLOX Engines
@PART[liquidEngine1-2,liquidEngineMainsail_v2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = heavyRocketry
	%SRFTechTreeAllocated = True
}

// Staged Combustion KeroLOX Engines
@PART[liquidEngine2-2_v2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_StagedCombustionKeroloxEngines
	%SRFTechTreeAllocated = True
}

// Advanced Gas-generator KeroLOX Engines
@PART[Size2LFB]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_AdvGasGeneratorKeroloxEngines
	%SRFTechTreeAllocated = True
}

// Improved HydroLOX Engines
@PART[toroidalAerospike]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_ImprovedHydroloxEngines
	%SRFTechTreeAllocated = True
}

// Advanced HydroLOX Engines
@PART[Size3AdvancedEngine]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_AdvHydroloxEngines
	%SRFTechTreeAllocated = True
}

// Staged Combustion HydroLOX Engines
@PART[Size3EngineCluster,SSME]:FOR[SimplifiedRealFuels]
{
	@TechRequired = veryHeavyRocketry
	%SRFTechTreeAllocated = True
}

// Throttleable Pressure-fed Hypergolic Engines
@PART[liquidEngine3_v2,liquidEngineMini_v2,microEngine_v2,omsEngine]:FOR[SimplifiedRealFuels]
{
	@TechRequired = precisionPropulsion
	%SRFTechTreeAllocated = True
}

// Gas-generator Hypergolic Engines
@PART[radialLiquidEngine1-2,smallRadialEngine_v2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_HypergolicEngines
	%SRFTechTreeAllocated = True
}

// Staged Combustion Hypergolic Engines
@PART[engineLargeSkipper,engineLargeSkipper_v2,liquidEngine2-2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_StagedCombustionHypergolicEngines
	%SRFTechTreeAllocated = True
}

// Early SRBs
@PART[sepMotor1,Mite]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_EarlySolidRockets
	%SRFTechTreeAllocated = True
}

// Basic SRBs
@PART[solidBooster_sm_v2,Shrimp]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_BasicSolidRockets
	%SRFTechTreeAllocated = True
}

// Improved SRBs
@PART[solidBooster_v2,solidBooster1-1,LaunchEscapeSystem]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_ImprovedSolidRockets
	%SRFTechTreeAllocated = True
}

// Advanced SRBs
@PART[MassiveBooster]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_AdvSolidRockets
	%SRFTechTreeAllocated = True
}

// Large SRBs
@PART[Thoroughbred,Clydesdale]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_LargeSolidRockets
	%SRFTechTreeAllocated = True
}

// Aircraft engines
@PART[miniJetEngine]:FOR[SimplifiedRealFuels]
{
	@TechRequired = aviation
	%SRFTechTreeAllocated = True
}
@PART[JetEngine]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_ImprovedJetEngines
	%SRFTechTreeAllocated = True
}
@PART[turboJet]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_AdvJetEngines
	%SRFTechTreeAllocated = True
}
@PART[turboFanEngine]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_Ramjets
	%SRFTechTreeAllocated = True
}
@PART[turboFanSize2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_EfficientTurbofanEngines
	%SRFTechTreeAllocated = True
}
@PART[RAPIER]:FOR[SimplifiedRealFuels]
{
	@TechRequired = aerospaceTech
	%SRFTechTreeAllocated = True
}

// Ion engine
@PART[ionEngine]:FOR[SimplifiedRealFuels]
{
	@TechRequired = ionPropulsion
	%SRFTechTreeAllocated = True
}

// Nuclear engine
@PART[nuclearEngine]:FOR[SimplifiedRealFuels]
{
	@TechRequired = nuclearPropulsion
	%SRFTechTreeAllocated = True
}


// **********
// Fuel tanks
// **********

// Basic fuel tanks
@PART[miniFuelTank]:FOR[SimplifiedRealFuels]
{
	@TechRequired = basicRocketry
	%SRFTechTreeAllocated = True
	%SRFTankTech = LevelI
	%SRFTankType = Default
}
@PART[rcsTankMini]:FOR[SimplifiedRealFuels]
{
	@TechRequired = stability
	%SRFTechTreeAllocated = True
	%SRFTankTech = LevelI
	%SRFTankType = HighPressurized
}
@PART[xenonTank,xenonTankLarge]:FOR[SimplifiedRealFuels]
{
	@TechRequired = ionPropulsion
	%SRFTechTreeAllocated = True
	%SRFTankType = Xenon
}

// Radial tanks
@PART[radialRCSTank]:FOR[SimplifiedRealFuels]
{
	@TechRequired = stability
	%SRFTechTreeAllocated = True
	%SRFTankTech = LevelI
	%SRFTankType = HighPressurized
}
@PART[rcsTankRadialLong]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_HPTanksII
	%SRFTechTreeAllocated = True
	%SRFTankTech = LevelII
	%SRFTankType = HighPressurized
}
@PART[externalTankRound,externalTankCapsule,externalTankToroid]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_HPTanksIV
	%SRFTechTreeAllocated = True
	%SRFTankTech = LevelIV
	%SRFTankType = HighPressurized
}
@PART[xenonTankRadial]:FOR[SimplifiedRealFuels]
{
	@TechRequired = ionPropulsion
	%SRFTechTreeAllocated = True
	%SRFTankType = Xenon
}

// Aircraft fuselages
@PART[MK1Fuselage,miniFuselage,Mk1FuselageStructural,noseConeAdapter]:FOR[SimplifiedRealFuels]
{
	@TechRequired = aviation
	%SRFTechTreeAllocated = True
	%SRFTankTech = LevelI
	%SRFTankType = Default
}

// Mk2 fuselages
@PART[mk2_1m_Bicoupler,mk2_1m_AdapterLong,mk2SpacePlaneAdapter,mk2FuselageLongLFO,mk2FuselageShortLFO,adapterSize2-Mk2,mk2FuselageShortMono,mk2Fuselage,mk2FuselageShortLiquid]:FOR[SimplifiedRealFuels]
{
	@TechRequired = hypersonicFlight
	%SRFTechTreeAllocated = True
	%SRFTankTech = LevelIV
	%SRFTankType = Default
}

// Mk3 fuselages
@PART[mk3FuselageLFO_100,mk3FuselageLFO_25,mk3FuselageLFO_50,adapterMk3-Size2,adapterMk3-Size2Slant,adapterSize3-Mk3,adapterMk3-Mk2,mk3FuselageMONO,mk3FuselageLF_100,mk3FuselageLF_25,mk3FuselageLF_50]:FOR[SimplifiedRealFuels]
{
	@TechRequired = heavyAerodynamics
	%SRFTechTreeAllocated = True
	%SRFTankTech = LevelIV
	%SRFTankType = Default
}

// 1.25m fuel tanks
@PART[fuelTankSmallFlat,fuelTankSmall,fuelTank,fuelTank_long]:FOR[SimplifiedRealFuels]
{
	@TechRequired = fuelSystems
	%SRFTechTreeAllocated = True
	%SRFTankTech = LevelII
	%SRFTankType = Default
}
@PART[RCSFuelTank]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_HPTanksII
	%SRFTechTreeAllocated = True
	%SRFTankTech = LevelII
	%SRFTankType = HighPressurized
}

// 2.5m fuel tanks
@PART[adapterSize2-Size1,adapterSize2-Size1Slant,Rockomax16_BW,Rockomax32_BW,Rockomax64_BW,Rockomax8BW]:FOR[SimplifiedRealFuels]
{
	@TechRequired = largeVolumeContainment
	%SRFTechTreeAllocated = True
	%SRFTankTech = LevelIV
	%SRFTankType = Default
}
@PART[RCSTank1-2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_HPTanksIV
	%SRFTechTreeAllocated = True
	%SRFTankTech = LevelIV
	%SRFTankType = HighPressurized
}

// 3.75m fuel tanks
@PART[Size3SmallTank,Size3MediumTank,Size3LargeTank]:FOR[SimplifiedRealFuels]
{
	@TechRequired = highPerformanceFuelSystems
	%SRFTechTreeAllocated = True
	%SRFTankTech = LevelIV
	%SRFTankType = Default
}

// Fuel line
@PART[fuelLine]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advFuelSystems
	%SRFTechTreeAllocated = True
}


// ****************************
// Command modules and habitats
// ****************************

@PART[seatExternalCmd,MK1CrewCabin,Mark2Cockpit]:FOR[SimplifiedRealFuels]
{
	@TechRequired = aviation
	%SRFTechTreeAllocated = True
}
@PART[mk1pod_v2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_BasicCommandModules
	%SRFTechTreeAllocated = True
}
@PART[landerCabinSmall]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_ImprovedCommandModules
	%SRFTechTreeAllocated = True
}
@PART[cupola,mk1-3pod,mk2LanderCabin_v2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = commandModules
	%SRFTechTreeAllocated = True
}
@PART[Mark1Cockpit]:FOR[SimplifiedRealFuels]
{
	@TechRequired = supersonicFlight
	%SRFTechTreeAllocated = True
}
@PART[mk2Cockpit_Standard,mk2Cockpit_Inline,mk2CrewCabin,Mark1Cockpit]:FOR[SimplifiedRealFuels]
{
	@TechRequired = hypersonicFlight
	%SRFTechTreeAllocated = True
}
@PART[mk3Cockpit_Shuttle,mk3CrewCabin]:FOR[SimplifiedRealFuels]
{
	@TechRequired = heavyAerodynamics
	%SRFTechTreeAllocated = True
}
@PART[crewCabin]:FOR[SimplifiedRealFuels]
{
	@TechRequired = spaceExploration
	%SRFTechTreeAllocated = True
}


// ***********
// Probe cores
// ***********

@PART[probeCoreSphere_v2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = electronics
	%SRFTechTreeAllocated = True
}
@PART[probeCoreHex_v2,probeCoreOcto_v2,probeCoreCube,probeStackSmall]:FOR[SimplifiedRealFuels]
{
	@TechRequired = unmannedTech
	%SRFTechTreeAllocated = True
}
@PART[probeCoreOcto2_v2,probeStackLarge,mk2DroneCore]:FOR[SimplifiedRealFuels]
{
	@TechRequired = miniaturization
	%SRFTechTreeAllocated = True
}
@PART[HECS2_ProbeCore,roverBody_v2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advUnmanned
	%SRFTechTreeAllocated = True
}


// *******
// Control
// *******

@PART[sasModule,avionicsNoseCone]:FOR[SimplifiedRealFuels]
{
	@TechRequired = stability
	%SRFTechTreeAllocated = True
}
@PART[advSasModule]:FOR[SimplifiedRealFuels]
{
	@TechRequired = flightControl
	%SRFTechTreeAllocated = True
}
@PART[asasmodule1-2,RCSBlock_v2,linearRcs,vernierEngine]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advFlightControl
	%SRFTechTreeAllocated = True
}


// *******
// Science
// *******

@PART[sensorThermometer]:FOR[SimplifiedRealFuels]
{
	@TechRequired = start
	%SRFTechTreeAllocated = True
}
@PART[sensorBarometer,GooExperiment]:FOR[SimplifiedRealFuels]
{
	@TechRequired = basicScience
	%SRFTechTreeAllocated = True
}
@PART[science_module,sensorAccelerometer,ScienceBox]:FOR[SimplifiedRealFuels]
{
	@TechRequired = scienceTech
	%SRFTechTreeAllocated = True
}
@PART[sensorGravimeter,sensorAtmosphere,InfraredTelescope]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advScienceTech
	%SRFTechTreeAllocated = True
}
@PART[Large_Crewed_Lab]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_DeepSpaceScience
	%SRFTechTreeAllocated = True
}


// *************
// Communication
// *************

@PART[longAntenna,SurfAntenna]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_BasicCommunications
	%SRFTechTreeAllocated = True
}
@PART[mediumDishAntenna]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_AdvCommunications
	%SRFTechTreeAllocated = True
}
@PART[HighGainAntenna]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_InterplanetaryCommunications
	%SRFTechTreeAllocated = True
}
@PART[commDish]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_DSNCommunications
	%SRFTechTreeAllocated = True
}
@PART[HighGainAntenna5]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_BasicRelays
	%SRFTechTreeAllocated = True
}
@PART[RelayAntenna5,RelayAntenna50]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_AdvRelays
	%SRFTechTreeAllocated = True
}
@PART[RelayAntenna100]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_LargeRelays
	%SRFTechTreeAllocated = True
}


// *********
// Resources
// *********

@PART[SurveyScanner]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_OrbitalScanning
	%SRFTechTreeAllocated = True
}
@PART[OrbitalScanner,SurfaceScanner]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_AdvScanningTech
	%SRFTechTreeAllocated = True
}
@PART[SmallTank,LargeTank,RadialOreTank,MiniISRU,MiniDrill,RadialDrill]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_BasicISRU
	%SRFTechTreeAllocated = True
}
@PART[ISRU]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_AdvISRU
	%SRFTechTreeAllocated = True
}


// **********
// Electrical
// **********

@PART[batteryPack,batteryBankMini]:FOR[SimplifiedRealFuels]
{
	@TechRequired = electrics
	%SRFTechTreeAllocated = True
}
@PART[ksp_r_largeBatteryPack,batteryBank]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advElectrics
	%SRFTechTreeAllocated = True
}
@PART[batteryBankLarge]:FOR[SimplifiedRealFuels]
{
	@TechRequired = specializedElectrics
	%SRFTechTreeAllocated = True
}
@PART[spotLight1,spotLight2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = electrics
	%SRFTechTreeAllocated = True
}
@PART[FuelCell]:FOR[SimplifiedRealFuels]
{
	@TechRequired = largeElectrics
	%SRFTechTreeAllocated = True
}
@PART[FuelCellArray]:FOR[SimplifiedRealFuels]
{
	@TechRequired = specializedElectrics
	%SRFTechTreeAllocated = True
}
@PART[rtg]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_EarlyRTG
	%SRFTechTreeAllocated = True
}
@PART[solarPanels5]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_BasicSolarPanels
	%SRFTechTreeAllocated = True
}
@PART[LgRadialSolarPanel,solarPanels1,solarPanels2,solarPanels3,solarPanels4]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_DeployableSolarPanels
	%SRFTechTreeAllocated = True
}
@PART[largeSolarPanel]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_AdvBlanketSolarPanels
	%SRFTechTreeAllocated = True
}


// ************
// Heat shields
// ************

@PART[HeatShield0]:FOR[SimplifiedRealFuels]
{
	@TechRequired = survivability
	%SRFTechTreeAllocated = True
}
@PART[HeatShield1,HeatShield2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_ReentryDescent
	%SRFTechTreeAllocated = True
}
@PART[HeatShield3]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_LargeHeatshields
	%SRFTechTreeAllocated = True
}
@PART[InflatableHeatShield]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_InflatableHeatshields
	%SRFTechTreeAllocated = True
}


// **********
// Parachutes
// **********

@PART[parachuteSingle]:FOR[SimplifiedRealFuels]
{
	@TechRequired = survivability
	%SRFTechTreeAllocated = True
}
@PART[parachuteRadial,radialDrogue,parachuteLarge,parachuteDrogue]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_ReentryDescent
	%SRFTechTreeAllocated = True
}


// *******
// Payload
// *******

@PART[fairingSize1]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advConstruction
	%SRFTechTreeAllocated = True
}
@PART[fairingSize2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = specializedConstruction
	%SRFTechTreeAllocated = True
}
@PART[fairingSize3]:FOR[SimplifiedRealFuels]
{
	@TechRequired = composites
	%SRFTechTreeAllocated = True
}
@PART[ServiceBay_125,ServiceBay_125_v2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advConstruction
	%SRFTechTreeAllocated = True
}
@PART[ServiceBay_250,ServiceBay_250_v2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = specializedConstruction
	%SRFTechTreeAllocated = True
}
@PART[mk2CargoBayL,mk2CargoBayS]:FOR[SimplifiedRealFuels]
{
	@TechRequired = hypersonicFlight
	%SRFTechTreeAllocated = True
}
@PART[mk3CargoBayL,mk3CargoBayS,mk3CargoBayM,mk3CargoRamp]:FOR[SimplifiedRealFuels]
{
	@TechRequired = heavyAerodynamics
	%SRFTechTreeAllocated = True
}


// ********
// Coupling
// ********

@PART[GrapplingDevice]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_BasicRobotics
	%SRFTechTreeAllocated = True
}

@PART[Decoupler_0,Separator_0,radialDecoupler]:FOR[SimplifiedRealFuels]
{
	@TechRequired = generalConstruction
	%SRFTechTreeAllocated = True
}
@PART[smallHardpoint,Decoupler_1,Separator_1,radialDecoupler2,Decoupler_2,Separator_2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advConstruction
	%SRFTechTreeAllocated = True
}
@PART[structuralPylon,Decoupler_3,Separator_3,radialDecoupler1-2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = specializedConstruction
	%SRFTechTreeAllocated = True
}

@PART[dockingPort3]:FOR[SimplifiedRealFuels]
{
	@TechRequired = docking
	%SRFTechTreeAllocated = True
}
@PART[dockingPortLateral,dockingPort1,dockingPort2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_AdvDocking
	%SRFTechTreeAllocated = True
}
@PART[dockingPortLarge,mk2DockingPort]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_HeavyDocking
	%SRFTechTreeAllocated = True
}


// *******
// Ladders
// *******

@PART[ladder1]:FOR[SimplifiedRealFuels]
{
	@TechRequired = engineering101
	%SRFTechTreeAllocated = True
}
@PART[telescopicLadder]:FOR[SimplifiedRealFuels]
{
	@TechRequired = landing
	%SRFTechTreeAllocated = True
}
@PART[telescopicLadderBay]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advLanding
	%SRFTechTreeAllocated = True
}


// ******
// Ground
// ******

@PART[miniLandingLeg]:FOR[SimplifiedRealFuels]
{
	@TechRequired = landing
	%SRFTechTreeAllocated = True
}
@PART[landingLeg1,landingLeg1-2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advLanding
	%SRFTechTreeAllocated = True
}

@PART[GearFixed,GearFree,SmallGearBay,GearSmall]:FOR[SimplifiedRealFuels]
{
	@TechRequired = aviation
	%SRFTechTreeAllocated = True
}
@PART[GearLarge,GearMedium]:FOR[SimplifiedRealFuels]
{
	@TechRequired = aerodynamicSystems
	%SRFTechTreeAllocated = True
}

@PART[roverWheel2]:FOR[SimplifiedRealFuels]
{
	@TechRequired = fieldScience
	%SRFTechTreeAllocated = True
}
@PART[roverWheel1,wheelMed]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advancedMotors
	%SRFTechTreeAllocated = True
}
@PART[roverWheel3]:FOR[SimplifiedRealFuels]
{
	@TechRequired = experimentalMotors
	%SRFTechTreeAllocated = True
}


// *********
// Radiators
// *********

@PART[radPanelSm,radPanelEdge]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_BasicRadiators
	%SRFTechTreeAllocated = True
}
@PART[radPanelLg,foldingRadSmall,foldingRadMed]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_AdvRadiators
	%SRFTechTreeAllocated = True
}
@PART[foldingRadLarge]:FOR[SimplifiedRealFuels]
{
	@TechRequired = SRF_LargeRadiators
	%SRFTechTreeAllocated = True
}


// **********
// Structural
// **********

@PART[structuralPanel1,structuralMiniNode,structuralIBeam1,strutOcto,strutCube]:FOR[SimplifiedRealFuels]
{
	@TechRequired = engineering101
	%SRFTechTreeAllocated = True
}
@PART[structuralPanel2,structuralIBeam3,structuralIBeam2,trussPiece1x,trussPiece3x,trussAdapter,launchClamp1,adapterSmallMiniTall,adapterSmallMiniShort,stackPoint1,stackBiCoupler_v2,stackTriCoupler_v2,stackQuadCoupler]:FOR[SimplifiedRealFuels]
{
	@TechRequired = generalConstruction
	%SRFTechTreeAllocated = True
}
@PART[stationHub,rocketNoseCone_v2,largeAdapter,largeAdapter2,adapterLargeSmallBi,adapterLargeSmallTri,adapterLargeSmallQuad,adapterEngines]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advConstruction
	%SRFTechTreeAllocated = True
}
@PART[Size3To2Adapter_v2,rocketNoseConeSize3]:FOR[SimplifiedRealFuels]
{
	@TechRequired = specializedConstruction
	%SRFTechTreeAllocated = True
}
@PART[strutConnector]:FOR[SimplifiedRealFuels]
{
	@TechRequired = advConstruction
	%SRFTechTreeAllocated = True
}


// *******
// Intakes
// *******

@PART[miniIntake,CircularIntake,airScoop]:FOR[SimplifiedRealFuels]
{
	@TechRequired = aviation
	%SRFTechTreeAllocated = True
}
@PART[ramAirIntake,IntakeRadialLong,MK1IntakeFuselage,nacelleBody,shockConeIntake]:FOR[SimplifiedRealFuels]
{
	@TechRequired = supersonicFlight
	%SRFTechTreeAllocated = True
}
@PART[radialEngineBody]:FOR[SimplifiedRealFuels]
{
	@TechRequired = hypersonicFlight
	%SRFTechTreeAllocated = True
}


// ****
// Aero
// ****

@PART[standardNoseCone,noseCone,pointyNoseConeA,pointyNoseConeB,airplaneTail,airplaneTailB,basicFin,winglet,R8winglet,winglet3,sweptWing,wingConnector,wingConnector2,wingConnector3,wingConnector4,wingConnector5,elevon2,elevon3,smallCtrlSrf,CanardController,structuralWing2,StandardCtrlSrf,rocketNoseCone,delta_small,sweptWing2,sweptWing1,sweptWing,tailfin]:FOR[SimplifiedRealFuels]
{
	@TechRequired = aviation
	%SRFTechTreeAllocated = True
}
@PART[deltaWing,structuralWing,structuralWing4,elevon5,airlinerCtrlSrf,airlinerMainWing,airlinerTailFin,structuralWing3]:FOR[SimplifiedRealFuels]
{
	@TechRequired = aerodynamicSystems
	%SRFTechTreeAllocated = True
}
@PART[AdvancedCanard,airbrake1]:FOR[SimplifiedRealFuels]
{
	@TechRequired = supersonicFlight
	%SRFTechTreeAllocated = True
}
@PART[wingStrake,wingShuttleDelta,wingShuttleElevon1,wingShuttleElevon2,wingShuttleRudder,wingShuttleStrake]:FOR[SimplifiedRealFuels]
{
	@TechRequired = heavyAerodynamics
	%SRFTechTreeAllocated = True
}


// ********
// Upgrades
// ********

@PART[probeCoreCube,probeCoreOcto_v2,roverBody_v2]:FOR[SimplifiedRealFuels]
{
	@MODULE[ModuleSAS]
	{
		%SASServiceLevel = 0
		UPGRADES
		{
			UPGRADE
			{
				name__ = SRF_SASUpgrade1
				description__ = SAS Upgrade 1
				SASServiceLevel = 1
			}
			UPGRADE
			{
				name__ = SRF_SASUpgrade2
				description__ = SAS Upgrade 2
				SASServiceLevel = 2
			}
			UPGRADE
			{
				name__ = SRF_SASUpgrade3
				description__ = SAS Upgrade 3
				SASServiceLevel = 3
			}
		}
	}
}
@PART[probeCoreHex_v2]:FOR[SimplifiedRealFuels]
{
	@MODULE[ModuleSAS]
	{
		UPGRADES
		{
			UPGRADE
			{
				name__ = SRF_SASUpgrade2
				description__ = SAS Upgrade 2
				SASServiceLevel = 2
			}
			UPGRADE
			{
				name__ = SRF_SASUpgrade3
				description__ = SAS Upgrade 3
				SASServiceLevel = 3
			}
		}
	}
}
@PART[probeCoreOcto2_v2]:FOR[SimplifiedRealFuels]
{
	@MODULE[ModuleSAS]
	{
		UPGRADES
		{
			UPGRADE
			{
				name__ = SRF_SASUpgrade3
				description__ = SAS Upgrade 3
				SASServiceLevel = 3
			}
		}
	}
}
